# Generated by Django 5.2.3 on 2025-07-06 00:01

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('middle_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(max_length=100)),
                ('preferred_name', models.CharField(blank=True, help_text='What the client likes to be called', max_length=100, null=True)),
                ('date_of_birth', models.DateField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other'), ('prefer_not_to_say', 'Prefer not to say')], default='prefer_not_to_say', max_length=20)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('diagnosis', models.TextField(help_text='Primary diagnosis and conditions')),
                ('secondary_diagnoses', models.TextField(blank=True, help_text='Additional diagnoses or conditions', null=True)),
                ('allergies', models.TextField(blank=True, help_text='Known allergies and reactions', null=True)),
                ('medications', models.TextField(blank=True, help_text='Current medications and dosages', null=True)),
                ('medical_notes', models.TextField(blank=True, help_text='Additional medical information', null=True)),
                ('care_level', models.CharField(choices=[('low', 'Low Support'), ('medium', 'Medium Support'), ('high', 'High Support'), ('critical', 'Critical Support')], default='medium', max_length=20)),
                ('interests', models.TextField(blank=True, help_text="Client's interests and hobbies", null=True)),
                ('likes', models.TextField(blank=True, help_text='Things the client enjoys', null=True)),
                ('dislikes', models.TextField(blank=True, help_text='Things the client dislikes or finds distressing', null=True)),
                ('communication_preferences', models.TextField(blank=True, help_text='How the client prefers to communicate', null=True)),
                ('behavioral_triggers', models.JSONField(blank=True, default=list, help_text='Known behavioral triggers')),
                ('calming_strategies', models.JSONField(blank=True, default=list, help_text='Effective calming strategies')),
                ('profile_picture', models.URLField(blank=True, help_text='URL to profile picture', null=True)),
                ('additional_photos', models.JSONField(blank=True, default=list, help_text='Additional photos (family, activities, etc.)')),
                ('client_id', models.CharField(help_text='Unique client identifier', max_length=50, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, help_text='General notes about the client', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('case_manager', models.ForeignKey(blank=True, help_text='Case manager responsible for this client', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_clients', to=settings.AUTH_USER_MODEL)),
                ('primary_support_worker', models.ForeignKey(blank=True, help_text='Primary support worker assigned to this client', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='primary_clients', to=settings.AUTH_USER_MODEL)),
                ('support_team', models.ManyToManyField(blank=True, help_text='Support team members working with this client', related_name='supported_clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
                'db_table': 'clients',
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='ClientDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_type', models.CharField(choices=[('medical_report', 'Medical Report'), ('assessment', 'Assessment'), ('care_plan', 'Care Plan'), ('behavior_plan', 'Behavior Support Plan'), ('consent_form', 'Consent Form'), ('insurance', 'Insurance Information'), ('legal', 'Legal Document'), ('photo_id', 'Photo ID'), ('other', 'Other')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('file_url', models.URLField(help_text='URL to the document file')),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('mime_type', models.CharField(blank=True, max_length=100, null=True)),
                ('document_date', models.DateField(blank=True, help_text='Date the document was created/issued', null=True)),
                ('expiry_date', models.DateField(blank=True, help_text='Document expiry date (if applicable)', null=True)),
                ('is_confidential', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('access_restricted_to', models.ManyToManyField(blank=True, help_text='Users who can access this document (if restricted)', related_name='accessible_documents', to=settings.AUTH_USER_MODEL)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='clients.client')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client Document',
                'verbose_name_plural': 'Client Documents',
                'db_table': 'client_documents',
                'ordering': ['-document_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('contact_type', models.CharField(choices=[('emergency', 'Emergency Contact'), ('family', 'Family Member'), ('guardian', 'Guardian'), ('gp', 'General Practitioner'), ('specialist', 'Medical Specialist'), ('therapist', 'Therapist'), ('social_worker', 'Social Worker'), ('advocate', 'Advocate'), ('friend', 'Friend'), ('other', 'Other')], max_length=20)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('relationship', models.CharField(blank=True, choices=[('parent', 'Parent'), ('sibling', 'Sibling'), ('guardian', 'Guardian'), ('grandparent', 'Grandparent'), ('aunt_uncle', 'Aunt/Uncle'), ('cousin', 'Cousin'), ('friend', 'Friend'), ('doctor', 'Doctor'), ('therapist', 'Therapist'), ('social_worker', 'Social Worker'), ('advocate', 'Advocate'), ('other', 'Other')], max_length=20, null=True)),
                ('relationship_description', models.CharField(blank=True, help_text='Additional relationship details', max_length=200, null=True)),
                ('phone_primary', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_secondary', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('practice_name', models.CharField(blank=True, max_length=200, null=True)),
                ('specialty', models.CharField(blank=True, max_length=200, null=True)),
                ('license_number', models.CharField(blank=True, max_length=100, null=True)),
                ('is_primary_contact', models.BooleanField(default=False, help_text='Primary contact for this contact type')),
                ('can_pick_up', models.BooleanField(default=False, help_text='Authorized to pick up client')),
                ('can_receive_updates', models.BooleanField(default=True, help_text='Can receive progress updates')),
                ('emergency_only', models.BooleanField(default=False, help_text='Contact only in emergencies')),
                ('preferred_contact_method', models.CharField(choices=[('phone', 'Phone'), ('email', 'Email'), ('text', 'Text Message')], default='phone', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to='clients.client')),
            ],
            options={
                'verbose_name': 'Client Contact',
                'verbose_name_plural': 'Client Contacts',
                'db_table': 'client_contacts',
                'ordering': ['contact_type', 'last_name', 'first_name'],
                'unique_together': {('client', 'contact_type', 'is_primary_contact')},
            },
        ),
    ]
