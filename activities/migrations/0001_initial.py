# Generated by Django 5.2.3 on 2025-06-30 08:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('goals', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('daily_living', 'Daily Living'), ('social', 'Social'), ('educational', 'Educational'), ('recreational', 'Recreational'), ('therapeutic', 'Therapeutic'), ('other', 'Other')], default='other', max_length=20)),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('instructions', models.TextField(help_text='Step-by-step instructions')),
                ('prerequisites', models.TextField(blank=True, help_text='Required skills or conditions', null=True)),
                ('estimated_duration', models.IntegerField(blank=True, help_text='Estimated duration in minutes', null=True)),
                ('image_url', models.URLField(blank=True, null=True)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_activities', to=settings.AUTH_USER_MODEL)),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='activities', to='goals.goal')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activities',
                'db_table': 'activities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ActivityLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('scheduled_time', models.TimeField(blank=True, null=True)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('skipped', 'Skipped')], default='scheduled', max_length=20)),
                ('completed', models.BooleanField(default=False)),
                ('completion_notes', models.TextField(blank=True, null=True)),
                ('difficulty_rating', models.IntegerField(blank=True, help_text='1-5 scale', null=True)),
                ('satisfaction_rating', models.IntegerField(blank=True, help_text='1-5 scale', null=True)),
                ('photos', models.JSONField(blank=True, default=list, help_text='List of photo URLs')),
                ('videos', models.JSONField(blank=True, default=list, help_text='List of video URLs')),
                ('notes', models.TextField(blank=True, null=True)),
                ('challenges', models.TextField(blank=True, null=True)),
                ('successes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='activities.activity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Activity Log',
                'verbose_name_plural': 'Activity Logs',
                'db_table': 'activity_logs',
                'ordering': ['-date', '-created_at'],
                'unique_together': {('activity', 'user', 'date')},
            },
        ),
    ]
